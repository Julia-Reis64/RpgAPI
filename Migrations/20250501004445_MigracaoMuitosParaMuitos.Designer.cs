// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgApi.Data;

#nullable disable

namespace RpgApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250501004445_MigracaoMuitosParaMuitos")]
    partial class MigracaoMuitosParaMuitos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RpgApi.Models.Armas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dano")
                        .HasColumnType("int");

                    b.Property<int>("Elemento")
                        .HasColumnType("int");

                    b.Property<int?>("HabilidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<int>("Raridade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HabilidadeId");

                    b.HasIndex("PersonagemId")
                        .IsUnique();

                    b.ToTable("TB_ARMAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dano = 25,
                            Elemento = 0,
                            Nome = "Tíbia (sim o osso da perna)",
                            PersonagemId = 1,
                            Raridade = 1
                        },
                        new
                        {
                            Id = 2,
                            Dano = 40,
                            Elemento = 0,
                            Nome = "Machado de Execução",
                            PersonagemId = 2,
                            Raridade = 2
                        },
                        new
                        {
                            Id = 3,
                            Dano = 25,
                            Elemento = 0,
                            Nome = "Cajado Candelabro",
                            PersonagemId = 3,
                            Raridade = 3
                        },
                        new
                        {
                            Id = 4,
                            Dano = 30,
                            Elemento = 0,
                            Nome = "Pedaço de Pilar",
                            PersonagemId = 4,
                            Raridade = 3
                        },
                        new
                        {
                            Id = 5,
                            Dano = 30,
                            Elemento = 0,
                            Nome = "Pistoleta Trevosa",
                            PersonagemId = 5,
                            Raridade = 1
                        },
                        new
                        {
                            Id = 6,
                            Dano = 35,
                            Elemento = 0,
                            Nome = "Foice",
                            PersonagemId = 6,
                            Raridade = 4
                        },
                        new
                        {
                            Id = 7,
                            Dano = 45,
                            Elemento = 0,
                            Nome = "Crânio Mágico (sei lá)",
                            PersonagemId = 7,
                            Raridade = 4
                        });
                });

            modelBuilder.Entity("RpgApi.Models.Habilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dano")
                        .HasColumnType("int");

                    b.Property<int>("Elemento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_HABILIDADES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dano = 39,
                            Elemento = 5,
                            Nome = "Combustão"
                        },
                        new
                        {
                            Id = 2,
                            Dano = 41,
                            Elemento = 2,
                            Nome = "Penumbra"
                        },
                        new
                        {
                            Id = 3,
                            Dano = 37,
                            Elemento = 3,
                            Nome = "Dama de Cálcio"
                        });
                });

            modelBuilder.Entity("RpgApi.Models.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<int>("Defesa")
                        .HasColumnType("int");

                    b.Property<int>("Derrotas")
                        .HasColumnType("int");

                    b.Property<int>("Disputas")
                        .HasColumnType("int");

                    b.Property<int>("Forca")
                        .HasColumnType("int");

                    b.Property<byte[]>("FotoPersonagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Inteligencia")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("PontosVida")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("Vitorias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioID");

                    b.ToTable("TB_PERSONAGENS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classe = 1,
                            Defesa = 23,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 17,
                            Inteligencia = 33,
                            Nome = "Frodo",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        },
                        new
                        {
                            Id = 2,
                            Classe = 1,
                            Defesa = 25,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 15,
                            Inteligencia = 30,
                            Nome = "Sam",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        },
                        new
                        {
                            Id = 3,
                            Classe = 3,
                            Defesa = 21,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 18,
                            Inteligencia = 35,
                            Nome = "Galadriel",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        },
                        new
                        {
                            Id = 4,
                            Classe = 2,
                            Defesa = 18,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 18,
                            Inteligencia = 37,
                            Nome = "Gandalf",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        },
                        new
                        {
                            Id = 5,
                            Classe = 1,
                            Defesa = 17,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 20,
                            Inteligencia = 31,
                            Nome = "Hobbit",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        },
                        new
                        {
                            Id = 6,
                            Classe = 3,
                            Defesa = 13,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 21,
                            Inteligencia = 34,
                            Nome = "Celeborn",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        },
                        new
                        {
                            Id = 7,
                            Classe = 2,
                            Defesa = 11,
                            Derrotas = 0,
                            Disputas = 0,
                            Forca = 25,
                            Inteligencia = 35,
                            Nome = "Radagast",
                            PontosVida = 100,
                            UsuarioID = 1,
                            Vitorias = 0
                        });
                });

            modelBuilder.Entity("RpgApi.Models.PersonagemHabilidade", b =>
                {
                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<int>("HabilidadeId")
                        .HasColumnType("int");

                    b.Property<int>("Elemento")
                        .HasColumnType("int");

                    b.HasKey("PersonagemId", "HabilidadeId");

                    b.HasIndex("HabilidadeId");

                    b.ToTable("TB_PERSONAGENS_HABILIDADES", (string)null);

                    b.HasData(
                        new
                        {
                            PersonagemId = 1,
                            HabilidadeId = 1,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 1,
                            HabilidadeId = 2,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 2,
                            HabilidadeId = 2,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 3,
                            HabilidadeId = 2,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 3,
                            HabilidadeId = 3,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 4,
                            HabilidadeId = 3,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 5,
                            HabilidadeId = 1,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 6,
                            HabilidadeId = 2,
                            Elemento = 0
                        },
                        new
                        {
                            PersonagemId = 7,
                            HabilidadeId = 3,
                            Elemento = 0
                        });
                });

            modelBuilder.Entity("RpgApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasDefaultValue("Jogador");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 123, 38, 210, 32, 113, 143, 181, 151, 11, 8, 73, 230, 3, 129, 95, 171, 24, 232, 166, 46, 35, 98, 0, 32, 237, 95, 69, 237, 47, 51, 151, 175, 136, 96, 143, 116, 181, 51, 38, 188, 250, 104, 162, 8, 18, 87, 177, 177, 48, 226, 139, 239, 71, 156, 206, 134, 16, 179, 136, 53, 99, 160, 120, 199 },
                            PasswordSalt = new byte[] { 19, 200, 243, 44, 125, 60, 138, 139, 32, 169, 237, 68, 116, 25, 51, 169, 138, 53, 212, 180, 60, 170, 254, 155, 29, 61, 94, 208, 220, 95, 127, 23, 88, 57, 244, 32, 103, 3, 46, 2, 60, 142, 107, 222, 102, 221, 1, 26, 104, 133, 91, 118, 40, 52, 240, 196, 64, 193, 107, 92, 113, 57, 246, 200, 199, 176, 234, 110, 195, 137, 229, 237, 244, 237, 91, 238, 30, 173, 43, 137, 245, 194, 32, 20, 218, 27, 114, 101, 53, 194, 221, 51, 206, 83, 136, 246, 95, 31, 217, 167, 109, 40, 20, 236, 39, 110, 145, 161, 13, 129, 167, 104, 191, 138, 169, 100, 77, 14, 221, 67, 136, 168, 17, 232, 197, 190, 73, 13 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("RpgApi.Models.Armas", b =>
                {
                    b.HasOne("RpgApi.Models.Habilidade", null)
                        .WithMany("ArmasHabilidades")
                        .HasForeignKey("HabilidadeId");

                    b.HasOne("RpgApi.Models.Personagem", "Personagem")
                        .WithOne("Armas")
                        .HasForeignKey("RpgApi.Models.Armas", "PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("RpgApi.Models.Personagem", b =>
                {
                    b.HasOne("RpgApi.Models.Usuario", "Usuario")
                        .WithMany("Personagems")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpgApi.Models.PersonagemHabilidade", b =>
                {
                    b.HasOne("RpgApi.Models.Habilidade", "Habilidade")
                        .WithMany("PersonagemHabilidades")
                        .HasForeignKey("HabilidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgApi.Models.Personagem", "Personagem")
                        .WithMany("PersonagemHabilidades")
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habilidade");

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("RpgApi.Models.Habilidade", b =>
                {
                    b.Navigation("ArmasHabilidades");

                    b.Navigation("PersonagemHabilidades");
                });

            modelBuilder.Entity("RpgApi.Models.Personagem", b =>
                {
                    b.Navigation("Armas");

                    b.Navigation("PersonagemHabilidades");
                });

            modelBuilder.Entity("RpgApi.Models.Usuario", b =>
                {
                    b.Navigation("Personagems");
                });
#pragma warning restore 612, 618
        }
    }
}
